<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ontology.sourcing.mapper.ddo.ActionMapper">

	<resultMap id="BaseResultMap" type="com.ontology.sourcing.model.common.ddo.Action">
		<id column="ontid" jdbcType="VARCHAR" property="ontid"/>
		<result column="control" jdbcType="VARCHAR" property="control"/>
		<result column="txhash" jdbcType="VARCHAR" property="txhash"/>
		<result column="type" jdbcType="INTEGER" property="type"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ontology.sourcing.model.common.ddo.Action">
		<result column="detail" jdbcType="LONGVARCHAR" property="detail"/>
	</resultMap>

	<sql id="Base_Column_List">
    ontid, control, txhash, type, create_time, update_time
  </sql>
	<sql id="Blob_Column_List">
    detail
  </sql>

	<insert id="insert" parameterType="com.ontology.sourcing.model.common.ddo.Action">
    insert into ${tableName} (ontid, control, txhash, type, create_time,
      update_time, detail)
    values (#{record.ontid,jdbcType=VARCHAR}, #{record.control,jdbcType=VARCHAR}, #{record.txhash,jdbcType=VARCHAR},
     #{record.type,jdbcType=INTEGER}, #{record.createTime,jdbcType=TIMESTAMP},
      #{record.updateTime,jdbcType=TIMESTAMP}, #{record.detail,jdbcType=LONGVARCHAR})
  </insert>

	<insert id="insertSelective" parameterType="com.ontology.sourcing.model.common.ddo.Action">
		insert into ${tableName}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.ontid != null">
				ontid,
			</if>
			<if test="record.control != null">
				control,
			</if>
			<if test="record.txhash != null">
				txhash,
			</if>
			<if test="record.type != null">
				type,
			</if>
			<if test="record.createTime != null">
				create_time,
			</if>
			<if test="record.updateTime != null">
				update_time,
			</if>
			<if test="record.detail != null">
				detail,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.ontid != null">
				#{record.ontid,jdbcType=VARCHAR},
			</if>
			<if test="record.control != null">
				#{record.control,jdbcType=VARCHAR},
			</if>
			<if test="record.txhash != null">
				#{record.txhash,jdbcType=VARCHAR},
			</if>
			<if test="record.type != null">
				#{record.type,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				#{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				#{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.detail != null">
				#{record.detail,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>

	<select id="selectByOntid" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List"/>
		,
		<include refid="Blob_Column_List"/>
		from ${tableName}
		where ontid = #{ontid,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByOntid" parameterType="java.lang.String">
    delete from ${tableName}
    where ontid = #{ontid,jdbcType=VARCHAR}
  </delete>

	<update id="updateByOntidSelective" parameterType="com.ontology.sourcing.model.common.ddo.Action">
		update ${tableName}
		<set>
			<if test="record.control != null">
				control = #{record.control,jdbcType=VARCHAR},
			</if>
			<if test="record.txhash != null">
				txhash = #{record.txhash,jdbcType=VARCHAR},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.detail != null">
				detail = #{record.detail,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where ontid = #{record.ontid,jdbcType=VARCHAR}
	</update>

	<update id="updateByOntidWithBLOBs" parameterType="com.ontology.sourcing.model.common.ddo.Action">
    update ${tableName}
    set control = #{record.control,jdbcType=VARCHAR},
      txhash = #{record.txhash,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    where ontid = #{record.ontid,jdbcType=VARCHAR}
  </update>

	<update id="updateByOntid" parameterType="com.ontology.sourcing.model.common.ddo.Action">
    update ${tableName}
    set control = #{record.control,jdbcType=VARCHAR},
      txhash = #{record.txhash,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    where ontid = #{record.ontid,jdbcType=VARCHAR}
  </update>

	<!---->
	<select id="count" resultType="int">
  select count(*) from ${tableName} where ontid = #{ontid,jdbcType=VARCHAR}
  </select>

	<select id="selectByPageNumSize" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List"/>
		,
		<include refid="Blob_Column_List"/>
		from ${tableName}
		where ontid = #{ontid,jdbcType=VARCHAR} order by create_time desc limit #{start}, #{offset}
	</select>

</mapper>