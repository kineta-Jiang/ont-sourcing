package com.ontology.sourcing;

import com.ontology.sourcing.service.time.bctsp.TspService;
import com.ontology.sourcing.utils.CodecUtil;
import org.apache.commons.codec.DecoderException;
import org.bouncycastle.tsp.*;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.io.IOException;

@RunWith(SpringRunner.class)
@SpringBootTest
public class TspTests {

    @Autowired private TspService tspService;

    @Test
    public void example01() throws IOException, DecoderException, TSPException {

        //
        String filehash = "e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c67";
        // System.out.println(filehash.length());  // 64

        //
        TimeStampResponse timeStampResponse = tspService.getTimeStampResponseRFC3161(filehash);
        if (timeStampResponse == null)
            return;

        //
        String timeStampResponseHexStr = tspService.timeStampResponseToHexStr(timeStampResponse);
        System.out.println(timeStampResponseHexStr);
        // 30820712301502010030100c0e4f7065726174696f6e204f6b6179308206f706092a864886f70d010702a08206e8308206e4020103310f300d060960864801650304020105003079060b2a864886f70d0109100104a06a0468306602010106082b06010401eb42033031300d060960864801650304020105000420e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c6702086e409c4b6a036ac2180f32303139303431303130303334355a020900cdec62ef7039ad28a08203c4308203c0308202a8a00302010202086e409c4b6a036ac2300d06092a864886f70d01010b0500307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a4341301e170d3138303332363039353533325a170d3238303332333039353533325a3020310b300906035504061302434e3111300f060355040313083230343874696d6530820122300d06092a864886f70d01010105000382010f003082010a0282010100d36d225c40e8e61c18cba4856d87e0de15d9ebcf91957274453e7630272d2ab92d462b234c3a8524765001f6661ace70a101dfa9c5eae744ea472a0183e378744b71a6d374e34c3ffdf067286fe7d82d3ad99b53967abfd1acd394e3665c04433e6c4652dcf0cbbe906ddee6476a45fc07b8739e5a8fbcda28b43102eaf5cd01d4afdba1df2a870dcf1e1330c6885a8fbc2c1255fb2cea73908876440c94c2b3785f340cecf0f07ec1d904bae73c6ec76ddb88676a395136b5f81aa08f66e60ef0a3a07d06a85d73e37099cbd6c1212492385ca6f4c72d8ed50c27819e2033921ffd782baa0ef1fcdf433d47108ca25aebad07fe1bf11ae717caed5f071423cf0203010001a381a230819f301f0603551d23041830168014512d67dbfcbce6652dc84e6a62577f098d92e3a930380603551d1f0431302f302da02ba0298627687474703a2f2f63726c2e737a636572742e636f6d2f737963726c2f63726c313834302e63726c300b0603551d0f0404030206c0301d0603551d0e041604140150e247502947dda3eaf0d7adf4a479619fb45130160603551d250101ff040c300a06082b06010505070308300d06092a864886f70d01010b05000382010100611ebf7a36041d169a6be733b91dd8f1f63f3ca0ca6c6e8a137feb03bfc439d7374bd1993f660651ac6a7d776996eb69b2680c10f82d6ba66d73ff23ce2992237ac4579b4830af7d84f88067e313b2b0694fe37acf819b48b3c32323560464133f3bfe84b1e1e484848d9e4c83f744a858f3a0c729c349e977557c49c155cc4cd12b2d45cd0a6bcf785bf9c002ed448b281c6483e0fa68dcc2b0c331fcd51f8f79dd7f61bbe95e9eabd1f8407fbe22efe9a084d5442d738792b9ed01bdae05e5770087905da6a38cda1ac7bf1b1368a707e9a174e5a30119ea2bfe27fde3a90ae8f6d3b3e382687336d62a696f63f893c8183d89447225b3c6be813c0f4f7de53182028930820285020101308187307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a434102086e409c4b6a036ac2300d06096086480165030402010500a081d3301a06092a864886f70d010903310d060b2a864886f70d0109100104301c06092a864886f70d010905310f170d3139303431303130303334355a302d06092a864886f70d0109343120301e300d06096086480165030402010500a10d06092a864886f70d01010b0500302f06092a864886f70d01090431220420052261dd522a3d8404a12f6aa405a463240447b50c3f827ec302ae2637f0f0003037060b2a864886f70d010910022f3128302630243022042047b30a3977c15ff4e999e00d320e6568d66fa7858245c3fd56f8c9dad22506e3300d06092a864886f70d01010b050004820100d15c48a44c7b836b6ad024b7db2d845735bcdad1c77f11d1fa21f513aa56f1fea14a6d39b3b480e6419153acd122239cb296af8903e069694e22746907e9375b1cbd2891dd579aa0b901f2faa675cb1242cf00f20df26f2cd1a337e61952e78b2df3ff0625283d95228bd9c309c1cc4396a5bbc196206751e173630f2ae126571957029550cd032f72a1572b53772ba62398e2a5276894f6a312360e50e7a1dca4e6adc68e30c027a40c4adfb7bc1fadf676b82f3755d180d9eaa3ad9857b23e2011d96c3316c8e75dabe92e108a949270868c18dc0932c1d5cb570c4af5e1629ec4555a3c2e9159a2e04526399ca2bdbc89a7f45290aa9a9c86d072c8364d5b
    }

    @Test
    public void example02() throws DecoderException, IOException, TSPException {

        // 当初的 nonce 14838343652798475560
        String timeStampResponseHexStr = "30820712301502010030100c0e4f7065726174696f6e204f6b6179308206f706092a864886f70d010702a08206e8308206e4020103310f300d060960864801650304020105003079060b2a864886f70d0109100104a06a0468306602010106082b06010401eb42033031300d060960864801650304020105000420e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c6702086e409c4b6a036ac2180f32303139303431303130303334355a020900cdec62ef7039ad28a08203c4308203c0308202a8a00302010202086e409c4b6a036ac2300d06092a864886f70d01010b0500307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a4341301e170d3138303332363039353533325a170d3238303332333039353533325a3020310b300906035504061302434e3111300f060355040313083230343874696d6530820122300d06092a864886f70d01010105000382010f003082010a0282010100d36d225c40e8e61c18cba4856d87e0de15d9ebcf91957274453e7630272d2ab92d462b234c3a8524765001f6661ace70a101dfa9c5eae744ea472a0183e378744b71a6d374e34c3ffdf067286fe7d82d3ad99b53967abfd1acd394e3665c04433e6c4652dcf0cbbe906ddee6476a45fc07b8739e5a8fbcda28b43102eaf5cd01d4afdba1df2a870dcf1e1330c6885a8fbc2c1255fb2cea73908876440c94c2b3785f340cecf0f07ec1d904bae73c6ec76ddb88676a395136b5f81aa08f66e60ef0a3a07d06a85d73e37099cbd6c1212492385ca6f4c72d8ed50c27819e2033921ffd782baa0ef1fcdf433d47108ca25aebad07fe1bf11ae717caed5f071423cf0203010001a381a230819f301f0603551d23041830168014512d67dbfcbce6652dc84e6a62577f098d92e3a930380603551d1f0431302f302da02ba0298627687474703a2f2f63726c2e737a636572742e636f6d2f737963726c2f63726c313834302e63726c300b0603551d0f0404030206c0301d0603551d0e041604140150e247502947dda3eaf0d7adf4a479619fb45130160603551d250101ff040c300a06082b06010505070308300d06092a864886f70d01010b05000382010100611ebf7a36041d169a6be733b91dd8f1f63f3ca0ca6c6e8a137feb03bfc439d7374bd1993f660651ac6a7d776996eb69b2680c10f82d6ba66d73ff23ce2992237ac4579b4830af7d84f88067e313b2b0694fe37acf819b48b3c32323560464133f3bfe84b1e1e484848d9e4c83f744a858f3a0c729c349e977557c49c155cc4cd12b2d45cd0a6bcf785bf9c002ed448b281c6483e0fa68dcc2b0c331fcd51f8f79dd7f61bbe95e9eabd1f8407fbe22efe9a084d5442d738792b9ed01bdae05e5770087905da6a38cda1ac7bf1b1368a707e9a174e5a30119ea2bfe27fde3a90ae8f6d3b3e382687336d62a696f63f893c8183d89447225b3c6be813c0f4f7de53182028930820285020101308187307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a434102086e409c4b6a036ac2300d06096086480165030402010500a081d3301a06092a864886f70d010903310d060b2a864886f70d0109100104301c06092a864886f70d010905310f170d3139303431303130303334355a302d06092a864886f70d0109343120301e300d06096086480165030402010500a10d06092a864886f70d01010b0500302f06092a864886f70d01090431220420052261dd522a3d8404a12f6aa405a463240447b50c3f827ec302ae2637f0f0003037060b2a864886f70d010910022f3128302630243022042047b30a3977c15ff4e999e00d320e6568d66fa7858245c3fd56f8c9dad22506e3300d06092a864886f70d01010b050004820100d15c48a44c7b836b6ad024b7db2d845735bcdad1c77f11d1fa21f513aa56f1fea14a6d39b3b480e6419153acd122239cb296af8903e069694e22746907e9375b1cbd2891dd579aa0b901f2faa675cb1242cf00f20df26f2cd1a337e61952e78b2df3ff0625283d95228bd9c309c1cc4396a5bbc196206751e173630f2ae126571957029550cd032f72a1572b53772ba62398e2a5276894f6a312360e50e7a1dca4e6adc68e30c027a40c4adfb7bc1fadf676b82f3755d180d9eaa3ad9857b23e2011d96c3316c8e75dabe92e108a949270868c18dc0932c1d5cb570c4af5e1629ec4555a3c2e9159a2e04526399ca2bdbc89a7f45290aa9a9c86d072c8364d5b";
        TimeStampResponse timeStampResponse = tspService.HexStrToTimeStampResponse(timeStampResponseHexStr);
        TimeStampToken timeStampToken = timeStampResponse.getTimeStampToken();
        System.out.println(timeStampToken);

        //
        tspService.parseToken(timeStampToken);

        //
        tspService.validate(timeStampToken);
    }

    // 修改了一些数字，会报错
    @Test
    public void example03() throws DecoderException, IOException, TSPException {

        // 当初的 nonce 14838343652798475560
        // 用asn.1在线解析器，可以看到nonce是020900开头的一串，如果改成020901，就会报错
        // org.bouncycastle.tsp.TSPException: CMS exception: org.bouncycastle.cms.CMSSignerDigestMismatchException: message-digest attribute value does not match calculated value
        String timeStampResponseHexStr = "30820712301502010030100c0e4f7065726174696f6e204f6b6179308206f706092a864886f70d010702a08206e8308206e4020103310f300d060960864801650304020105003079060b2a864886f70d0109100104a06a0468306602010106082b06010401eb42033031300d060960864801650304020105000420e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c6702086e409c4b6a036ac2180f32303139303431303130303334355a020901cdec62ef7039ad28a08203c4308203c0308202a8a00302010202086e409c4b6a036ac2300d06092a864886f70d01010b0500307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a4341301e170d3138303332363039353533325a170d3238303332333039353533325a3020310b300906035504061302434e3111300f060355040313083230343874696d6530820122300d06092a864886f70d01010105000382010f003082010a0282010100d36d225c40e8e61c18cba4856d87e0de15d9ebcf91957274453e7630272d2ab92d462b234c3a8524765001f6661ace70a101dfa9c5eae744ea472a0183e378744b71a6d374e34c3ffdf067286fe7d82d3ad99b53967abfd1acd394e3665c04433e6c4652dcf0cbbe906ddee6476a45fc07b8739e5a8fbcda28b43102eaf5cd01d4afdba1df2a870dcf1e1330c6885a8fbc2c1255fb2cea73908876440c94c2b3785f340cecf0f07ec1d904bae73c6ec76ddb88676a395136b5f81aa08f66e60ef0a3a07d06a85d73e37099cbd6c1212492385ca6f4c72d8ed50c27819e2033921ffd782baa0ef1fcdf433d47108ca25aebad07fe1bf11ae717caed5f071423cf0203010001a381a230819f301f0603551d23041830168014512d67dbfcbce6652dc84e6a62577f098d92e3a930380603551d1f0431302f302da02ba0298627687474703a2f2f63726c2e737a636572742e636f6d2f737963726c2f63726c313834302e63726c300b0603551d0f0404030206c0301d0603551d0e041604140150e247502947dda3eaf0d7adf4a479619fb45130160603551d250101ff040c300a06082b06010505070308300d06092a864886f70d01010b05000382010100611ebf7a36041d169a6be733b91dd8f1f63f3ca0ca6c6e8a137feb03bfc439d7374bd1993f660651ac6a7d776996eb69b2680c10f82d6ba66d73ff23ce2992237ac4579b4830af7d84f88067e313b2b0694fe37acf819b48b3c32323560464133f3bfe84b1e1e484848d9e4c83f744a858f3a0c729c349e977557c49c155cc4cd12b2d45cd0a6bcf785bf9c002ed448b281c6483e0fa68dcc2b0c331fcd51f8f79dd7f61bbe95e9eabd1f8407fbe22efe9a084d5442d738792b9ed01bdae05e5770087905da6a38cda1ac7bf1b1368a707e9a174e5a30119ea2bfe27fde3a90ae8f6d3b3e382687336d62a696f63f893c8183d89447225b3c6be813c0f4f7de53182028930820285020101308187307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a434102086e409c4b6a036ac2300d06096086480165030402010500a081d3301a06092a864886f70d010903310d060b2a864886f70d0109100104301c06092a864886f70d010905310f170d3139303431303130303334355a302d06092a864886f70d0109343120301e300d06096086480165030402010500a10d06092a864886f70d01010b0500302f06092a864886f70d01090431220420052261dd522a3d8404a12f6aa405a463240447b50c3f827ec302ae2637f0f0003037060b2a864886f70d010910022f3128302630243022042047b30a3977c15ff4e999e00d320e6568d66fa7858245c3fd56f8c9dad22506e3300d06092a864886f70d01010b050004820100d15c48a44c7b836b6ad024b7db2d845735bcdad1c77f11d1fa21f513aa56f1fea14a6d39b3b480e6419153acd122239cb296af8903e069694e22746907e9375b1cbd2891dd579aa0b901f2faa675cb1242cf00f20df26f2cd1a337e61952e78b2df3ff0625283d95228bd9c309c1cc4396a5bbc196206751e173630f2ae126571957029550cd032f72a1572b53772ba62398e2a5276894f6a312360e50e7a1dca4e6adc68e30c027a40c4adfb7bc1fadf676b82f3755d180d9eaa3ad9857b23e2011d96c3316c8e75dabe92e108a949270868c18dc0932c1d5cb570c4af5e1629ec4555a3c2e9159a2e04526399ca2bdbc89a7f45290aa9a9c86d072c8364d5b";
        TimeStampResponse timeStampResponse = tspService.HexStrToTimeStampResponse(timeStampResponseHexStr);
        TimeStampToken timeStampToken = timeStampResponse.getTimeStampToken();
        System.out.println(timeStampToken);

        //
        tspService.parseToken(timeStampToken);

        //
        tspService.validate(timeStampToken);
    }

    // 测试压缩后入库，出库还原
    @Test
    public void example04() throws IOException, DecoderException, TSPException {
        //
        String filehash = "e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c67";
        //
        TimeStampResponse timeStampResponse = tspService.getTimeStampResponseRFC3161(filehash);
        if (timeStampResponse == null)
            return;

        // return the ASN.1 encoded representation of this object.
        // 原始的
        byte[] timeStampResponseBytes = tspService.timeStampResponseToBytes(timeStampResponse);
        System.out.println(timeStampResponseBytes.length);  // 1813

        // 原始的
        String timeStampResponseHexStr = tspService.timeStampResponseToHexStr(timeStampResponse);
        System.out.println(timeStampResponseHexStr);
        // 30820711301502010030100c0e4f7065726174696f6e204f6b6179308206f606092a864886f70d010702a08206e7308206e3020103310f300d060960864801650304020105003078060b2a864886f70d0109100104a0690467306502010106082b06010401eb42033031300d060960864801650304020105000420e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c6702086e409c4b6a036ac2180f32303139303431323035323331355a02086c13dbcad2161b3ea08203c4308203c0308202a8a00302010202086e409c4b6a036ac2300d06092a864886f70d01010b0500307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a4341301e170d3138303332363039353533325a170d3238303332333039353533325a3020310b300906035504061302434e3111300f060355040313083230343874696d6530820122300d06092a864886f70d01010105000382010f003082010a0282010100d36d225c40e8e61c18cba4856d87e0de15d9ebcf91957274453e7630272d2ab92d462b234c3a8524765001f6661ace70a101dfa9c5eae744ea472a0183e378744b71a6d374e34c3ffdf067286fe7d82d3ad99b53967abfd1acd394e3665c04433e6c4652dcf0cbbe906ddee6476a45fc07b8739e5a8fbcda28b43102eaf5cd01d4afdba1df2a870dcf1e1330c6885a8fbc2c1255fb2cea73908876440c94c2b3785f340cecf0f07ec1d904bae73c6ec76ddb88676a395136b5f81aa08f66e60ef0a3a07d06a85d73e37099cbd6c1212492385ca6f4c72d8ed50c27819e2033921ffd782baa0ef1fcdf433d47108ca25aebad07fe1bf11ae717caed5f071423cf0203010001a381a230819f301f0603551d23041830168014512d67dbfcbce6652dc84e6a62577f098d92e3a930380603551d1f0431302f302da02ba0298627687474703a2f2f63726c2e737a636572742e636f6d2f737963726c2f63726c313834302e63726c300b0603551d0f0404030206c0301d0603551d0e041604140150e247502947dda3eaf0d7adf4a479619fb45130160603551d250101ff040c300a06082b06010505070308300d06092a864886f70d01010b05000382010100611ebf7a36041d169a6be733b91dd8f1f63f3ca0ca6c6e8a137feb03bfc439d7374bd1993f660651ac6a7d776996eb69b2680c10f82d6ba66d73ff23ce2992237ac4579b4830af7d84f88067e313b2b0694fe37acf819b48b3c32323560464133f3bfe84b1e1e484848d9e4c83f744a858f3a0c729c349e977557c49c155cc4cd12b2d45cd0a6bcf785bf9c002ed448b281c6483e0fa68dcc2b0c331fcd51f8f79dd7f61bbe95e9eabd1f8407fbe22efe9a084d5442d738792b9ed01bdae05e5770087905da6a38cda1ac7bf1b1368a707e9a174e5a30119ea2bfe27fde3a90ae8f6d3b3e382687336d62a696f63f893c8183d89447225b3c6be813c0f4f7de53182028930820285020101308187307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a434102086e409c4b6a036ac2300d06096086480165030402010500a081d3301a06092a864886f70d010903310d060b2a864886f70d0109100104301c06092a864886f70d010905310f170d3139303431323035323331355a302d06092a864886f70d0109343120301e300d06096086480165030402010500a10d06092a864886f70d01010b0500302f06092a864886f70d01090431220420e19438feaf1e6d2adabe33133d7c56a3a87636bbe7c7f44b15fdc7e9a597dc443037060b2a864886f70d010910022f3128302630243022042047b30a3977c15ff4e999e00d320e6568d66fa7858245c3fd56f8c9dad22506e3300d06092a864886f70d01010b0500048201000e8530843e774f2e615e30e602fbb216b6cff3eded684e7e3e49a82126055eab4b6f921c52aa7b7245f72702da9b56a91636272d1c079c063393dfa2c3f7abada54240fa51f3144588ffda9d0cf01a468888c716d0b7ca306006e7a2513705ca78d5cdf4b56964449d3a31d8f4316b5c3caaaa2b0b66cb471f369d511f5175f96b3ba40eae7fbaf466fa86069acef689c887c24079d2d74dfb22e773d50596b401effba0480a6964d9a327622d9d375ae6b5d2c922edc125c709b4d9b941d5747eca0f3c259a99a7298249f9877819a480309ce4a0a93cc56694b8b55ce7ed9ceb819ec18af1451463b9663f8235d98beec73d1617e751749b4a364958b7f975
        System.out.println(timeStampResponseHexStr.length());  // 3626

        // 压缩
        byte[] compressed = CodecUtil.compress(timeStampResponseBytes);
        System.out.println(compressed.length);  // 1555

        // 存到数据库中的
        String timeStampResponseHexStrCompressed = tspService.timeStampResponseToHexStrCompressed(timeStampResponse);
        System.out.println(timeStampResponseHexStrCompressed);
        // 950ef04930820711301502010030100c0e4f7065726174696f6e204f6b6179308206f606092a864886f70d010702a08206e7308206e3020103310f300d060960864801650304020105003078060b0d296009100104a0690467306502010106082b06010401eb420330313a3300f0580420e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c6702086e409c4b6a036ac2180f32303139303431323035323331355a02086c13dbcad2161b3ea08203c4308203c0308202a8a00302010202153601710d9558010b0500307b310b300906035504061302434e31123010010d3c0813094775616e67646f6e673111300f0114380713085368656e7a68656e312730250113080a131e0113745a68656e20436572746966696361746520417574686f72697479310d300b0129180b1304737a6361110f68031304535a4341301e170d3138303332363039353533325a170d32010f00330d0f08302031329d000d89380313083230343874696d65308201222ed200f4c4010105000382010f003082010a0282010100d36d225c40e8e61c18cba4856d87e0de15d9ebcf91957274453e7630272d2ab92d462b234c3a8524765001f6661ace70a101dfa9c5eae744ea472a0183e378744b71a6d374e34c3ffdf067286fe7d82d3ad99b53967abfd1acd394e3665c04433e6c4652dcf0cbbe906ddee6476a45fc07b8739e5a8fbcda28b43102eaf5cd01d4afdba1df2a870dcf1e1330c6885a8fbc2c1255fb2cea73908876440c94c2b3785f340cecf0f07ec1d904bae73c6ec76ddb88676a395136b5f81aa08f66e60ef0a3a07d06a85d73e37099cbd6c1212492385ca6f4c72d8ed50c27819e2033921ffd782baa0ef1fcdf433d47108ca25aebad07fe1bf11ae717caed5f071423cf0203010001a381a230819f301f0603551d23041830168014512d67dbfcbce6652dc84e6a62577f098d92e3a930380603551d1f0431302f302da02ba0298627687474703a2f2f63726c2e737a636572742e636f6d2f737963726c2f63726c313834302e63726c300b0603551d0f0404030206c0301d0603551d0e041604140150e247502947dda3eaf0d7adf4a479619fb45130160603551d250101ff040c300a06082b06010505070308300d06092a864886f70d4599000321bef40e01611ebf7a36041d169a6be733b91dd8f1f63f3ca0ca6c6e8a137feb03bfc439d7374bd1993f660651ac6a7d776996eb69b2680c10f82d6ba66d73ff23ce2992237ac4579b4830af7d84f88067e313b2b0694fe37acf819b48b3c32323560464133f3bfe84b1e1e484848d9e4c83f744a858f3a0c729c349e977557c49c155cc4cd12b2d45cd0a6bcf785bf9c002ed448b281c6483e0fa68dcc2b0c331fcd51f8f79dd7f61bbe95e9eabd1f8407fbe22efe9a084d5442d738792b9ed01bdae05e5770087905da6a38cda1ac7bf1b1368a707e9a174e5a30119ea2bfe27fde3a90ae8f6d3b3e382687336d62a696f63f893c8183d89447225b3c6be813c0f4f7de5318202893082028502010130818730feac03eeac0300023242049de614a081d3301a069154300903310d060b2a864886f70d0181f604301c191c1405310f170d312eb30404302d191e10343120301e61cd1d5d04a10d1520000181ae002f150fa8090431220420e19438feaf1e6d2adabe33133d7c56a3a87636bbe7c7f44b15fdc7e9a597dc443037060b2a118db0022f3128302630243022042047b30a3977c15ff4e999e00d320e6568d66fa7858245c3fd56f8c9dad22506e330367900f40301048201000e8530843e774f2e615e30e602fbb216b6cff3eded684e7e3e49a82126055eab4b6f921c52aa7b7245f72702da9b56a91636272d1c079c063393dfa2c3f7abada54240fa51f3144588ffda9d0cf01a468888c716d0b7ca306006e7a2513705ca78d5cdf4b56964449d3a31d8f4316b5c3caaaa2b0b66cb471f369d511f5175f96b3ba40eae7fbaf466fa86069acef689c887c24079d2d74dfb22e773d50596b401effba0480a6964d9a327622d9d375ae6b5d2c922edc125c709b4d9b941d5747eca0f3c259a99a7298249f9877819a480309ce4a0a93cc56694b8b55ce7ed9ceb819ec18af1451463b9663f8235d98beec73d1617e751749b4a364958b7f975
        System.out.println(timeStampResponseHexStrCompressed.length());  // 3110

        // 从数据库中取出的
        TimeStampResponse timeStampResponse2 = tspService.hexStrCompressedToTimeStampResponse(timeStampResponseHexStrCompressed);

        String timeStampResponseHexStr2 = tspService.timeStampResponseToHexStr(timeStampResponse2);
        System.out.println(timeStampResponseHexStr2);
        // 30820711301502010030100c0e4f7065726174696f6e204f6b6179308206f606092a864886f70d010702a08206e7308206e3020103310f300d060960864801650304020105003078060b2a864886f70d0109100104a0690467306502010106082b06010401eb42033031300d060960864801650304020105000420e81475b25e49f2767522d332057c3e6bb1144c842dce47913dc8222927102c6702086e409c4b6a036ac2180f32303139303431323035323331355a02086c13dbcad2161b3ea08203c4308203c0308202a8a00302010202086e409c4b6a036ac2300d06092a864886f70d01010b0500307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a4341301e170d3138303332363039353533325a170d3238303332333039353533325a3020310b300906035504061302434e3111300f060355040313083230343874696d6530820122300d06092a864886f70d01010105000382010f003082010a0282010100d36d225c40e8e61c18cba4856d87e0de15d9ebcf91957274453e7630272d2ab92d462b234c3a8524765001f6661ace70a101dfa9c5eae744ea472a0183e378744b71a6d374e34c3ffdf067286fe7d82d3ad99b53967abfd1acd394e3665c04433e6c4652dcf0cbbe906ddee6476a45fc07b8739e5a8fbcda28b43102eaf5cd01d4afdba1df2a870dcf1e1330c6885a8fbc2c1255fb2cea73908876440c94c2b3785f340cecf0f07ec1d904bae73c6ec76ddb88676a395136b5f81aa08f66e60ef0a3a07d06a85d73e37099cbd6c1212492385ca6f4c72d8ed50c27819e2033921ffd782baa0ef1fcdf433d47108ca25aebad07fe1bf11ae717caed5f071423cf0203010001a381a230819f301f0603551d23041830168014512d67dbfcbce6652dc84e6a62577f098d92e3a930380603551d1f0431302f302da02ba0298627687474703a2f2f63726c2e737a636572742e636f6d2f737963726c2f63726c313834302e63726c300b0603551d0f0404030206c0301d0603551d0e041604140150e247502947dda3eaf0d7adf4a479619fb45130160603551d250101ff040c300a06082b06010505070308300d06092a864886f70d01010b05000382010100611ebf7a36041d169a6be733b91dd8f1f63f3ca0ca6c6e8a137feb03bfc439d7374bd1993f660651ac6a7d776996eb69b2680c10f82d6ba66d73ff23ce2992237ac4579b4830af7d84f88067e313b2b0694fe37acf819b48b3c32323560464133f3bfe84b1e1e484848d9e4c83f744a858f3a0c729c349e977557c49c155cc4cd12b2d45cd0a6bcf785bf9c002ed448b281c6483e0fa68dcc2b0c331fcd51f8f79dd7f61bbe95e9eabd1f8407fbe22efe9a084d5442d738792b9ed01bdae05e5770087905da6a38cda1ac7bf1b1368a707e9a174e5a30119ea2bfe27fde3a90ae8f6d3b3e382687336d62a696f63f893c8183d89447225b3c6be813c0f4f7de53182028930820285020101308187307b310b300906035504061302434e31123010060355040813094775616e67646f6e673111300f060355040713085368656e7a68656e31273025060355040a131e5368656e5a68656e20436572746966696361746520417574686f72697479310d300b060355040b1304737a6361310d300b06035504031304535a434102086e409c4b6a036ac2300d06096086480165030402010500a081d3301a06092a864886f70d010903310d060b2a864886f70d0109100104301c06092a864886f70d010905310f170d3139303431323035323331355a302d06092a864886f70d0109343120301e300d06096086480165030402010500a10d06092a864886f70d01010b0500302f06092a864886f70d01090431220420e19438feaf1e6d2adabe33133d7c56a3a87636bbe7c7f44b15fdc7e9a597dc443037060b2a864886f70d010910022f3128302630243022042047b30a3977c15ff4e999e00d320e6568d66fa7858245c3fd56f8c9dad22506e3300d06092a864886f70d01010b0500048201000e8530843e774f2e615e30e602fbb216b6cff3eded684e7e3e49a82126055eab4b6f921c52aa7b7245f72702da9b56a91636272d1c079c063393dfa2c3f7abada54240fa51f3144588ffda9d0cf01a468888c716d0b7ca306006e7a2513705ca78d5cdf4b56964449d3a31d8f4316b5c3caaaa2b0b66cb471f369d511f5175f96b3ba40eae7fbaf466fa86069acef689c887c24079d2d74dfb22e773d50596b401effba0480a6964d9a327622d9d375ae6b5d2c922edc125c709b4d9b941d5747eca0f3c259a99a7298249f9877819a480309ce4a0a93cc56694b8b55ce7ed9ceb819ec18af1451463b9663f8235d98beec73d1617e751749b4a364958b7f975
        System.out.println(timeStampResponseHexStr2.length());  // 3626
    }
}
